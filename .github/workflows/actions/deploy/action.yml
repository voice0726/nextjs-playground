outputs:
  url:
    description: URL of deployed preview
    value: ${{ steps.deploy.outputs.url }}

inputs:
  VERCEL_ORG_ID:
    description: vercel organization id
    required: true
  VERCEL_PROJECT_ID:
    description: vercel project id
    required: true
  VERCEL_TOKEN:
    description: vercel token
    required: true
  TARGET_ENVIRONMENT:
    description: target environment (preview, staging, or production)
    required: true

runs:
  using: composite
  steps:
    - name: Initialize environment
      uses: ./.github/workflows/actions/init
    - name: Install Vercel CLI
      run: pnpm install --global vercel@latest
      shell: bash
    - name: Pull Vercel Environment Information
      run: vercel pull --yes --environment=${{ inputs.TARGET_ENVIRONMENT == 'production' && 'production' || 'preview' }} --token=${{ inputs.VERCEL_TOKEN }}
      env:
        VERCEL_ORG_ID: ${{ inputs.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ inputs.VERCEL_PROJECT_ID }}
      shell: bash
    - name: Build Project Artifacts
      run: vercel build ${{ inputs.TARGET_ENVIRONMENT == 'production' && '--prod' }} --token=${{ inputs.VERCEL_TOKEN }}
      env:
        VERCEL_ORG_ID: ${{ inputs.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ inputs.VERCEL_PROJECT_ID }}
      shell: bash
    - name: Deploy Project Artifacts to Vercel
      id: deploy
      run: echo "url=$(vercel deploy ${{ inputs.TARGET_ENVIRONMENT == 'production' && '--prod' }} --prebuilt --token=${{ inputs.VERCEL_TOKEN }})" >> $GITHUB_OUTPUT
      env:
        VERCEL_ORG_ID: ${{ inputs.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ inputs.VERCEL_PROJECT_ID }}
      shell: bash
    - name: Assign staging domain to deployment
      if: ${{ inputs.TARGET_ENVIRONMENT == 'staging' }}
      run: vercel alias ${{ steps.deploy-staging.outputs.url }} staging-voice0726.vercel.app --scope=voice726 --token=${{ inputs.VERCEL_TOKEN }}
      env:
        VERCEL_ORG_ID: ${{ inputs.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ inputs.VERCEL_PROJECT_ID }}
      shell: bash
