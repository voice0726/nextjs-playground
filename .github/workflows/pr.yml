name: Check PR

on:
  pull_request:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  checks: write

defaults:
  run:
    shell: bash

env:
  skip: ${{ !jobs.check-changed-files.output.any_changed || startsWith('renovate', github.ref_name) }}

jobs:
  check-changed-files:
    name: "Check changed files"
    runs-on: ubuntu-latest
    steps:
      - name: "Check changed files"
        uses: ./.github/workflows/actions/get-changed-files
  tsc-lint:
    name: "Run typechecking and linting"
    runs-on: ubuntu-latest
    if: ${{ env.skip }}
    continue-on-error: true
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: type check and lint
        uses: ./.github/workflows/actions/typecheck-and-lint
  test:
    name: "Run test"
    needs: tsc-lint
    runs-on: ubuntu-latest
    if: ${{ env.skip }}
    continue-on-error: true
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Run test
        uses: ./.github/workflows/actions/test
  code-analysis:
    name: "Run code analysis by qodana"
    needs: tsc-lint
    runs-on: ubuntu-latest
    if: ${{ env.skip }}
    continue-on-error: true
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Get changed files
        uses: ./.github/workflows/actions/get-changed-files
        id: check-changed-files
      - name: Run qodana code scanning
        uses: ./.github/workflows/actions/qodana
        if: ${{ steps.check-changed-files.outputs.any-changed }}
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN_1290658496 }}
          QODANA_ENDPOINT: 'https://qodana.cloud'
  output:
    runs-on: ubuntu-latest
    name: Show results of checking Pull Request
    needs: [ test, code-analysis ]
    steps:
      - name: Skipped
        if: ${{ env.skip }}
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          echo "Skipped checking PR"
          echo "Changed file list:"
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done
      - name: Succeeded
        if: ${{ always() && !contains(join(needs.*.result, ','), 'failure') }}
        run: |
          echo "Finished checking PR successfully"
      - name: Failed
        if: ${{ always() && contains(join(needs.*.result, ','), 'failure') }}
        run: |
          echo "Some checks are not passed"
          exit 1

